cmake_minimum_required(VERSION 3.23)
project(UniversalDependencyParser)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_FLAGS "-O3")

find_package(dependency_parser REQUIRED)
find_package(classification REQUIRED)

add_library(UniversalDependencyParser Parser/TransitionBasedParser/Command.h Parser/TransitionBasedParser/TransitionSystem.h Parser/TransitionBasedParser/Candidate.cpp Parser/TransitionBasedParser/Candidate.h Parser/TransitionBasedParser/Decision.cpp Parser/TransitionBasedParser/Decision.h Parser/TransitionBasedParser/StackRelation.cpp Parser/TransitionBasedParser/StackRelation.h Parser/TransitionBasedParser/StackWord.cpp Parser/TransitionBasedParser/StackWord.h Parser/TransitionBasedParser/State.cpp Parser/TransitionBasedParser/State.h Parser/TransitionBasedParser/ScoringOracle.h Parser/TransitionBasedParser/RandomScoringOracle.cpp Parser/TransitionBasedParser/RandomScoringOracle.h Parser/TransitionBasedParser/Oracle.cpp Parser/TransitionBasedParser/Oracle.h Parser/TransitionBasedParser/RandomOracle.cpp Parser/TransitionBasedParser/RandomOracle.h Parser/TransitionBasedParser/ArcEagerOracle.cpp Parser/TransitionBasedParser/ArcEagerOracle.h Parser/TransitionBasedParser/ArcStandardOracle.cpp Parser/TransitionBasedParser/ArcStandardOracle.h Parser/TransitionBasedParser/InstanceGenerator.cpp Parser/TransitionBasedParser/InstanceGenerator.h Parser/TransitionBasedParser/SimpleInstanceGenerator.cpp Parser/TransitionBasedParser/SimpleInstanceGenerator.h Parser/TransitionBasedParser/ArcEagerInstanceGenerator.cpp Parser/TransitionBasedParser/ArcEagerInstanceGenerator.h Parser/TransitionBasedParser/Agenda.cpp Parser/TransitionBasedParser/Agenda.h Parser/TransitionBasedParser/TransitionParser.cpp Parser/TransitionBasedParser/TransitionParser.h Parser/TransitionBasedParser/ArcStandardTransitionParser.cpp Parser/TransitionBasedParser/ArcStandardTransitionParser.h Parser/TransitionBasedParser/ArcEagerTransitionParser.cpp Parser/TransitionBasedParser/ArcEagerTransitionParser.h)
target_link_libraries(UniversalDependencyParser dependency_parser::dependency_parser classification::classification)
